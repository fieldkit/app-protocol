syntax = "proto3";
package fk_app;

enum QueryType {
  QUERY_NONE = 0;
  QUERY_CAPABILITIES = 1;
  QUEYR_CONFIGURE_SENSOR = 2;
  QUERY_DATA_SETS = 3;
  QUERY_DOWNLOAD_DATA_SET = 4;
  QUERY_ERASE_DATA_SET = 5;
}

enum ReplyType {
  REPLY_NONE = 0;
  REPLY_SUCCESS = 1;
  REPLY_ERROR = 2;
  REPLY_CAPABILITIES = 3;
  REPLY_DATA_SETS = 4;
}

// Querying information about the device, what it's capable of.

message QueryCapabilities {
  uint32 version = 1;
}

message SensorCapabilities {
  uint32 id = 1;
  string name = 2;
  uint32 frequency = 3;
}

message Capabilities {
  uint32 version = 1;
  string name = 3;
  repeated SensorCapabilities sensors = 4;
}

// Configuring the device.

message ConfigureSensorQuery {
  uint32 id = 1;
  uint32 frequency = 2;
}

// Querying data sets that the device has on memory.

message QueryDataSets {
}

message DataSet {
  uint32 id = 1;
  uint32 sensor = 2;
  string name = 3;
  uint32 size = 4;
  uint32 time = 5;
  uint32 hash = 6;
}

// TODO: Paging?
message DataSets {
  repeated DataSet dataSets = 1;
}

// Download a data set.

message DownloadDataSet {
  uint32 id = 1;
  uint32 page = 2;
}

message Sample {
  uint32 time = 1;
  float value = 2;
}

// Datasets can be stored in multiple ways depending on the need:
// 1) Values at a certain fixed frequency.
// 2) Individual samples taken at certain times.

message DataSetData {
  uint32 time = 1;
  repeated Sample samples = 2;
  repeated float data = 3;
  uint32 hash = 4;
}

// Erase a data set.

message EraseDataSet {
  uint32 id = 1;
}

// Top level messages exchanged over the wire.

message WireMessageQuery {
  QueryType type = 1;
  QueryCapabilities queryCapabilities = 2;
  ConfigureSensorQuery configureSensor = 3;
  QueryDataSets queryDataSets = 4;
  DownloadDataSet downloadDataSet = 5;
  EraseDataSet eraseDataSet = 6;
}

message Error {
  string message = 1;
}

message WireMessageReply {
  ReplyType type = 1;
  repeated Error errors = 2;
  Capabilities capabilities = 3;
  DataSets dataSets = 4;
  DataSetData dataSetData = 5;
}
