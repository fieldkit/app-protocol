/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Wed Aug 30 11:16:27 2017. */

#ifndef PB_FK_APP_FK_APP_PB_H_INCLUDED
#define PB_FK_APP_FK_APP_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _fk_app_QueryType {
    fk_app_QueryType_QUERY_NONE = 0,
    fk_app_QueryType_QUERY_CAPABILITIES = 1
} fk_app_QueryType;
#define _fk_app_QueryType_MIN fk_app_QueryType_QUERY_NONE
#define _fk_app_QueryType_MAX fk_app_QueryType_QUERY_CAPABILITIES
#define _fk_app_QueryType_ARRAYSIZE ((fk_app_QueryType)(fk_app_QueryType_QUERY_CAPABILITIES+1))

typedef enum _fk_app_ReplyType {
    fk_app_ReplyType_REPLY_NONE = 0,
    fk_app_ReplyType_REPLY_CAPABILITIES = 1
} fk_app_ReplyType;
#define _fk_app_ReplyType_MIN fk_app_ReplyType_REPLY_NONE
#define _fk_app_ReplyType_MAX fk_app_ReplyType_REPLY_CAPABILITIES
#define _fk_app_ReplyType_ARRAYSIZE ((fk_app_ReplyType)(fk_app_ReplyType_REPLY_CAPABILITIES+1))

/* Struct definitions */
typedef struct _fk_app_Capabilities {
    int32_t version;
    pb_callback_t name;
    pb_callback_t sensors;
/* @@protoc_insertion_point(struct:fk_app_Capabilities) */
} fk_app_Capabilities;

typedef struct _fk_app_QueryCapabilities {
    int64_t version;
/* @@protoc_insertion_point(struct:fk_app_QueryCapabilities) */
} fk_app_QueryCapabilities;

typedef struct _fk_app_SensorCapabilities {
    int32_t index;
    pb_callback_t name;
/* @@protoc_insertion_point(struct:fk_app_SensorCapabilities) */
} fk_app_SensorCapabilities;

typedef struct _fk_app_WireMessageQuery {
    fk_app_QueryType type;
    fk_app_QueryCapabilities queryCapabilities;
/* @@protoc_insertion_point(struct:fk_app_WireMessageQuery) */
} fk_app_WireMessageQuery;

typedef struct _fk_app_WireMessageReply {
    fk_app_ReplyType type;
    fk_app_Capabilities capabilities;
/* @@protoc_insertion_point(struct:fk_app_WireMessageReply) */
} fk_app_WireMessageReply;

/* Default values for struct fields */

/* Initializer values for message structs */
#define fk_app_QueryCapabilities_init_default    {0}
#define fk_app_SensorCapabilities_init_default   {0, {{NULL}, NULL}}
#define fk_app_Capabilities_init_default         {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define fk_app_WireMessageQuery_init_default     {(fk_app_QueryType)0, fk_app_QueryCapabilities_init_default}
#define fk_app_WireMessageReply_init_default     {(fk_app_ReplyType)0, fk_app_Capabilities_init_default}
#define fk_app_QueryCapabilities_init_zero       {0}
#define fk_app_SensorCapabilities_init_zero      {0, {{NULL}, NULL}}
#define fk_app_Capabilities_init_zero            {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define fk_app_WireMessageQuery_init_zero        {(fk_app_QueryType)0, fk_app_QueryCapabilities_init_zero}
#define fk_app_WireMessageReply_init_zero        {(fk_app_ReplyType)0, fk_app_Capabilities_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define fk_app_Capabilities_version_tag          1
#define fk_app_Capabilities_name_tag             3
#define fk_app_Capabilities_sensors_tag          4
#define fk_app_QueryCapabilities_version_tag     1
#define fk_app_SensorCapabilities_index_tag      1
#define fk_app_SensorCapabilities_name_tag       2
#define fk_app_WireMessageQuery_type_tag         1
#define fk_app_WireMessageQuery_queryCapabilities_tag 2
#define fk_app_WireMessageReply_type_tag         1
#define fk_app_WireMessageReply_capabilities_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t fk_app_QueryCapabilities_fields[2];
extern const pb_field_t fk_app_SensorCapabilities_fields[3];
extern const pb_field_t fk_app_Capabilities_fields[4];
extern const pb_field_t fk_app_WireMessageQuery_fields[3];
extern const pb_field_t fk_app_WireMessageReply_fields[3];

/* Maximum encoded size of messages (where known) */
#define fk_app_QueryCapabilities_size            11
/* fk_app_SensorCapabilities_size depends on runtime parameters */
/* fk_app_Capabilities_size depends on runtime parameters */
#define fk_app_WireMessageQuery_size             15
#define fk_app_WireMessageReply_size             (8 + fk_app_Capabilities_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FK_APP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
